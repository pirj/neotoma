% x = 3
% y = x
% z = [1, 2, x, 5]
% q = {a: 3, b: c}

grammar <- space? head:row tail:(space row)*;
% future:
% grammar <- space? [row space];

row <- atom space? '=' space? value; % : (0, 2);  a tuple containing varname and value
value <- array / dict / simple;
simple <- number / atom;

array <- '[' space? array:(head:simple tail:(',' space? simple)*) space? ']' : 3;
dict <- '{' space? dict:(head:pair tail:(',' space? pair)*) space? '}' : 3;
pair <- atom space? ':' space? simple;
% array <- '[' space? array:[simple* (space? ',' space?)] space? ']' : [3];
% dict <- '{' space? dict:{atom* (space? ':' space?) simple (space? ',' space?)} space? '}' : {3};

number <- (non_zero_digit digit+) / digit;
atom <- [a-z]+;
non_zero_digit <- [1-9];
digit <- [0-9];
space <- [ \t\n\s\r]*;
